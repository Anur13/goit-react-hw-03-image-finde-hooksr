{"version":3,"sources":["Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/LoadMoreButton/LoadMorebutton.module.css","Components/SearchBar/Searchbar.module.css","Utils/Apis.js","Components/SearchBar/SearchBar.js","Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/LoadMoreButton/LoadMoreButton.js","Components/ImageGallery/ImageGallery.js","Components/Modal/Modal.js","App.js","index.js"],"names":["module","exports","getPictures","pageNumber","query","axios","get","then","resp","data","defaults","baseURL","SearchBar","HandleQueryInput","SetPageNumber","useState","SetQuery","className","styles","Searchbar","SearchForm","onSubmit","event","preventDefault","SearchFormButton","type","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","target","value","length","ImageGalleryItem","previewURL","tags","HandlePictureModal","largeImageURL","ToggleModal","onClick","src","alt","ImageGalleryItemImage","LoadMoreButton","HandleLoadMoreButton","Button","ImageGallery","ToggleLoader","ToggleGalleryState","ToggleFound","pictures","SetPictures","totalPages","SetTotalPages","useEffect","UpdatePictures","window","scrollTo","top","document","documentElement","scrollHeight","behavior","a","fetchPictures","hits","Math","round","totalHits","finally","map","item","id","pageCount","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","pagination","subContainerClassName","activeClassName","modal","querySelector","Modal","bigPicture","addEventListener","handleKeyDown","removeEventListener","code","createPortal","currentTarget","Overlay","App","pagesNumber","SetPagesNumber","SetbigPicture","showModal","SetshowModal","loader","SetLoader","galleryPresent","SetGalleryPresent","nothingFound","SetNothingFound","page","state","Url","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.96153b78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__10Mh4\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2sRx_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1hnjP\",\"pagination\":\"ImageGallery_pagination__1G28h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__33Ypd\",\"Modal\":\"Modal_Modal__3ihEg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"LoadMorebutton_Button__1eRMO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Searchbar_SearchForm__UoHRL\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3kjAo\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3_tJT\",\"SearchFormInput\":\"Searchbar_SearchFormInput__31aaZ\",\"Searchbar\":\"Searchbar_Searchbar__2pSmi\"};","import axios from 'axios';\n\nconst key = '19970182-43374a871d90ac8a22fd423a0';\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nexport default function getPictures({ pageNumber, query }) {\n  return axios\n    .get(\n      `?q=${query}&page=${pageNumber}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(resp => resp.data);\n}\n","import PropTypes from 'prop-types';\nimport styles from './Searchbar.module.css';\nimport React, { useState } from 'react';\n\nconst SearchBar = ({ HandleQueryInput, SetPageNumber }) => {\n  const [query, SetQuery] = useState('');\n  const HandleSubmit = event => {\n    event.preventDefault();\n    HandleQueryInput(query);\n    SetPageNumber(1);\n  };\n\n  const HandleInputChange = event => {\n    if (event.target.value.length === 0) {\n      SetQuery('');\n    }\n    SetQuery(event.target.value);\n  };\n  return (\n    <header className={styles.Searchbar}>\n      <form className={styles.SearchForm} onSubmit={HandleSubmit}>\n        <button className={styles.SearchFormButton} type=\"submit\">\n          <span className={styles.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={styles.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={HandleInputChange}\n        />\n      </form>\n    </header>\n  );\n};\nSearchBar.propTypes = {\n  HandleQueryInput: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n// class SearchBar extends Component {\n//   state = {\n//     query: '',\n//   };\n//   HandleSubmit = event => {\n//     event.preventDefault();\n//     this.props.HandleQueryInput(this.state.query);\n//     this.props.SetPageNumber(1);\n//   };\n\n//   HandleInputChange = event => {\n//     if (event.target.value.length === 0) {\n//       this.setState({ query: ' ' });\n//     }\n//     this.setState({ query: event.target.value });\n//   };\n//   render() {\n//     const { HandleQueryInput } = this.props;\n//     return (\n//       <header className={styles.Searchbar}>\n//         <form className={styles.SearchForm} onSubmit={this.HandleSubmit}>\n//           <button className={styles.SearchFormButton} type=\"submit\">\n//             <span className={styles.SearchFormButtonLabel}>Search</span>\n//           </button>\n\n//           <input\n//             className={styles.SearchFormInput}\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             onChange={this.HandleInputChange}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n// SearchBar.propTypes = {\n//   HandleQueryInput: PropTypes.func.isRequired,\n// };\n// export default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({\n  previewURL,\n  tags,\n  HandlePictureModal,\n  largeImageURL,\n  ToggleModal,\n}) => {\n  const openBigPicture = event => {\n    HandlePictureModal(largeImageURL);\n    ToggleModal();\n  };\n\n  return (\n    <li className={styles.ImageGalleryItem}>\n      <img\n        onClick={openBigPicture}\n        src={previewURL}\n        alt={tags}\n        className={styles.ImageGalleryItemImage}\n      />\n    </li>\n  );\n};\nImageGalleryItem.propTypes = {\n  previewURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  HandlePictureModal: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  ToggleModal: PropTypes.func.isRequired,\n};\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './LoadMorebutton.module.css';\n\nconst LoadMoreButton = ({ HandleLoadMoreButton }) => {\n  return (\n    <>\n      <button\n        className={styles.Button}\n        onClick={() => HandleLoadMoreButton()}\n        type=\"button\"\n      >\n        Load more\n      </button>\n    </>\n  );\n};\nLoadMoreButton.propTypes = {\n  HandleLoadMoreButton: PropTypes.func.isRequired,\n};\nexport default LoadMoreButton;\n","import fetchPictures from '../../Utils/Apis';\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\nimport styles from './ImageGallery.module.css';\nimport LoadMoreButton from './LoadMoreButton/LoadMoreButton';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\n\nimport React, { useState, useEffect } from 'react';\n\nconst ImageGallery = ({\n  query,\n  pageNumber,\n  ToggleLoader,\n  ToggleGalleryState,\n  ToggleFound,\n  SetPageNumber,\n  HandleLoadMoreButton,\n  HandlePictureModal,\n  ToggleModal,\n}) => {\n  const [pictures, SetPictures] = useState([]);\n  const [totalPages, SetTotalPages] = useState(0);\n\n  useEffect(() => {\n    SetPictures([]);\n    UpdatePictures();\n  }, [query]);\n\n  useEffect(() => {\n    SetPictures([]);\n    UpdatePictures();\n  }, [pageNumber]);\n\n  useEffect(() => {\n    if (query === '') {\n      SetPictures([]);\n    }\n    return () => {\n      ToggleGalleryState(false);\n    };\n  });\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }, []);\n\n  const test = data => {\n    // this.setState({ pictures: [] });\n    SetPictures([]);\n    SetPageNumber(data.selected + 1);\n  };\n\n  const UpdatePictures = async () => {\n    ToggleLoader();\n    await fetchPictures({ query, pageNumber })\n      .then(\n        resp => (\n          SetPictures([...pictures, ...resp.hits]),\n          SetTotalPages(Math.round(resp.totalHits / 12))\n        ),\n      )\n      .finally(() => ToggleLoader());\n\n    if (pictures.length > 0) {\n      ToggleGalleryState(true);\n    }\n    ToggleFound();\n  };\n  return (\n    <>\n      <ul className={styles.ImageGallery}>\n        {pictures.map(item => {\n          return (\n            <ImageGalleryItem\n              ToggleModal={ToggleModal}\n              HandlePictureModal={HandlePictureModal}\n              key={item.id}\n              {...item}\n            />\n          );\n        })}\n      </ul>\n      {pictures.length > 0 && (\n        <LoadMoreButton HandleLoadMoreButton={HandleLoadMoreButton} />\n      )}\n      <div>\n        <ReactPaginate\n          pageCount={totalPages}\n          previousLabel={'previous'}\n          nextLabel={'next'}\n          breakLabel={'...'}\n          breakClassName={'break-me'}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={test}\n          containerClassName={styles.pagination}\n          subContainerClassName={'pages pagination'}\n          activeClassName={'active'}\n        />\n      </div>\n    </>\n  );\n};\n\nImageGallery.propTypes = {\n  query: PropTypes.string.isRequired,\n  pageNumber: PropTypes.number.isRequired,\n  ToggleLoader: PropTypes.func.isRequired,\n  ToggleGalleryState: PropTypes.func.isRequired,\n  ToggleFound: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\n\nconst modal = document.querySelector('#modal');\n\nconst Modal = ({ ToggleModal, bigPicture }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      ToggleModal();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      ToggleModal();\n    }\n  };\n\n  return createPortal(\n    <div onClick={handleBackdropClick} className={styles.Overlay}>\n      <div className={styles.Modal}>\n        <img src={bigPicture} alt=\"\" />\n      </div>\n    </div>,\n    modal,\n  );\n};\n\nModal.propTypes = {\n  ToggleModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n// class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   handleKeyDown = event => {\n//     if (event.code === 'Escape') {\n//       this.props.ToggleModal();\n//     }\n//   };\n//   handleBackdropClick = event => {\n//     if (event.currentTarget === event.target) {\n//       this.props.ToggleModal();\n//     }\n//   };\n//   render() {\n//     const { ToggleModal } = this.props;\n//     return createPortal(\n//       <div onClick={this.handleBackdropClick} className={styles.Overlay}>\n//         <div className={styles.Modal}>\n//           <img src={this.props.bigPicture} alt=\"\" />\n//         </div>\n//       </div>,\n//       modal,\n//     );\n//   }\n// }\n// Modal.propTypes = {\n//   ToggleModal: PropTypes.func.isRequired,\n// };\n// export default Modal;\n","import GetPage from './Utils/Apis';\nimport React, { useState } from 'react';\nimport SearchBar from './Components/SearchBar/SearchBar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\nimport Modal from './Components/Modal/Modal';\nimport Loader from 'react-loader-spinner';\nimport './index.css';\n\nconst App = () => {\n  const [query, SetQuery] = useState('');\n  const [pagesNumber, SetPagesNumber] = useState(1);\n  const [bigPicture, SetbigPicture] = useState('');\n  const [showModal, SetshowModal] = useState(false);\n  const [loader, SetLoader] = useState(false);\n  const [galleryPresent, SetGalleryPresent] = useState(false);\n  const [nothingFound, SetNothingFound] = useState(false);\n\n  const ToggleModal = () => {\n    SetshowModal(!showModal);\n  };\n\n  const ToggleFound = () => {\n    SetNothingFound(true);\n  };\n\n  const ToggleGalleryState = state => {\n    SetGalleryPresent(state);\n  };\n  const ToggleLoader = () => {\n    SetLoader(!loader);\n  };\n  const HandlePictureModal = Url => {\n    SetbigPicture(Url);\n  };\n\n  const HandleQueryInput = query => {\n    SetQuery(query);\n  };\n  const SetPageNumber = page => {\n    SetPagesNumber(page);\n  };\n\n  const HandleLoadMoreButton = () => {\n    SetPagesNumber(pagesNumber + 1);\n  };\n\n  return (\n    <div className=\"container\">\n      {showModal && <Modal ToggleModal={ToggleModal} bigPicture={bigPicture} />}\n\n      <SearchBar\n        SetPageNumber={SetPageNumber}\n        HandleQueryInput={HandleQueryInput}\n      />\n      {query.length > 0 && (\n        <ImageGallery\n          ToggleFound={ToggleFound}\n          ToggleGalleryState={ToggleGalleryState}\n          ToggleLoader={ToggleLoader}\n          ToggleModal={ToggleModal}\n          HandleLoadMoreButton={HandleLoadMoreButton}\n          HandlePictureModal={HandlePictureModal}\n          SetPageNumber={SetPageNumber}\n          query={query}\n          pagesNumber={pagesNumber}\n          bigPicture={bigPicture}\n          showModal={showModal}\n          loader={loader}\n          galleryPresent={galleryPresent}\n          nothingFound={nothingFound}\n        />\n      )}\n      {!galleryPresent && !loader && nothingFound && (\n        <span>Nothing was found</span>\n      )}\n      {loader && (\n        <Loader\n          className=\"Loader\"\n          type=\"TailSpin\"\n          color=\"#00BFFF\"\n          height={150}\n          width={150}\n          timeout={6000} //3 secs\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n// class App extends Component {\n//   state = {\n//     query: '',\n//     pageNumber: 1,\n//     bigPicture: '',\n//     showModal: false,\n//     loader: false,\n//     galleryPresent: false,\n//     nothingFound: false,\n//   };\n\n//   ToggleModal = () => {\n//     this.setState(prevState => {\n//       return { showModal: !prevState.showModal };\n//     });\n//   };\n\n//   ToggleFound = () => {\n//     this.setState({ nothingFound: true });\n//   };\n\n//   ToggleGalleryState = state => {\n//     this.setState({ galleryPresent: state });\n//   };\n//   ToggleLoader = () => {\n//     this.setState({ loader: !this.state.loader });\n//   };\n//   HandlePictureModal = Url => {\n//     this.setState({ bigPicture: Url });\n//   };\n\n//   HandleQueryInput = query => {\n//     this.setState({ query: query });\n//   };\n//   SetPageNumber = page => {\n//     this.setState({ pageNumber: page });\n//   };\n\n//   HandleLoadMoreButton = () => {\n//     this.setState(prevState => ({\n//       pageNumber: prevState.pageNumber + 1,\n//     }));\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         {this.state.showModal && (\n//           <Modal\n//             ToggleModal={this.ToggleModal}\n//             bigPicture={this.state.bigPicture}\n//           />\n//         )}\n\n//         <SearchBar\n//           SetPageNumber={this.SetPageNumber}\n//           HandleQueryInput={this.HandleQueryInput}\n//         />\n//         {this.state.query.length > 0 && (\n//           <ImageGallery\n//             ToggleFound={this.ToggleFound}\n//             ToggleGalleryState={this.ToggleGalleryState}\n//             ToggleLoader={this.ToggleLoader}\n//             ToggleModal={this.ToggleModal}\n//             HandleLoadMoreButton={this.HandleLoadMoreButton}\n//             HandlePictureModal={this.HandlePictureModal}\n//             SetPageNumber={this.SetPageNumber}\n//             {...this.state}\n//           />\n//         )}\n//         {!this.state.galleryPresent &&\n//           !this.state.loader &&\n//           this.state.nothingFound && <span>Nothing was found</span>}\n//         {this.state.loader && (\n//           <Loader\n//             className=\"Loader\"\n//             type=\"TailSpin\"\n//             color=\"#00BFFF\"\n//             height={150}\n//             width={150}\n//             timeout={6000} //3 secs\n//           />\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}